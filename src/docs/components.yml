components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
          description: Category ID
        name:
          type: string
          description: Category name
        description:
          type: string
          description: Category description
      required:
        - name
      example:
        id: 6716f8f4c5b7a2f9d1e4a123
        name: Tea
        description: All teas
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: "#/components/schemas/Token"
        refresh:
          $ref: "#/components/schemas/Token"

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  Topping:
    type: object
    properties:
      id:
        type: string
        description: ID của topping (ObjectId)
      name:
        type: string
        description: Tên topping
      price:
        type: number
        description: Giá của topping
      isAvailable:
        type: boolean
        description: Trạng thái còn hàng hay hết hàng
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
    example:
      id: 60d5ec49f390c500155b1f80
      name: Trân Châu Đen
      price: 10000
      isAvailable: true
      createdAt: 2025-10-10T08:00:00.000Z
      updatedAt: 2025-10-10T08:00:00.000Z
